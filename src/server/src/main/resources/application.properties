# https://www.baeldung.com/configuration-properties-in-spring-boot
# https://stackoverflow.com/questions/38040572/spring-boot-loading-initial-data/38049582

# TODO - Do not hard-cord JDBC connector, so we can use PostgresSQL or Oracle, SQL Server if we wanted to

# MySQL
spring.datasource.url= jdbc:mysql://${DB_URL}:3306/${DB_NAME}?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username= ${DB_USER}
spring.datasource.password= ${DB_PASSWORD}
spring.datasource.initialization-mode=always
spring.datasource.data=classpath:/sql/**/*.sql

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto = create

# Logging
logging.level.org.hibernate.SQL= DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Jackson
spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

# JWT
jwt.header=Authorization
jwt.secret=${JWT_SECRET}
jwt.expiration=604800
jwt.route.authentication.path=/auth
jwt.route.authentication.refresh=/refresh

# Email
spring.mail.host=smtp.gmail.com
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable = true

# SSL
#server.port= 8443
#server.ssl.key-store= keystore.p12
#server.ssl.key-store-password= ${SSL_KEYSTORE_PASSWORD}
#server.ssl.keyStoreType= PKCS12
#server.ssl.keyAlias= pos